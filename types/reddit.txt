class Reddit {
    kind: String
    data: RedditData
}

class RedditData {
    after: String
    dist: Int
    modhash: String
    whitelistStatus: String
    children: List<Child>
    before: Null
}

class Child {
    kind: Kind
    data: ChildData
}

class ChildData {
    domain: String
    approvedAtUTC: Null
    modReasonBy: Null
    bannedBy: Null
    numReports: Null
    subredditID: String
    thumbnailWidth: Maybe<Int>
    subreddit: String
    selftextHTML: Maybe<String>
    selftext: String
    likes: Null
    suggestedSort: Maybe<String>
    userReports: List<Any>
    secureMedia: Maybe<Media>
    isRedditMediaDomain: Bool
    linkFlairText: Maybe<String>
    id: String
    bannedAtUTC: Null
    modReasonTitle: Null
    viewCount: Null
    archived: Bool
    clicked: Bool
    mediaEmbed: MediaEmbed
    reportReasons: Null
    author: String
    numCrossposts: Int
    saved: Bool
    modReports: List<Any>
    canModPost: Bool
    isCrosspostable: Bool
    pinned: Bool
    score: Int
    approvedBy: Null
    over18: Bool
    hidden: Bool
    preview: Preview
    thumbnail: String
    edited: Bool
    linkFlairCSSClass: Maybe<String>
    authorFlairCSSClass: Maybe<String>
    contestMode: Bool
    gilded: Int
    downs: Int
    brandSafe: Bool
    secureMediaEmbed: MediaEmbed
    removalReason: Null
    postHint: PostHint
    authorFlairText: Maybe<String>
    stickied: Bool
    canGild: Bool
    thumbnailHeight: Maybe<Int>
    parentWhitelistStatus: WhitelistStatus
    name: String
    spoiler: Bool
    permalink: String
    subredditType: SubredditType
    locked: Bool
    hideScore: Bool
    created: Double
    url: String
    whitelistStatus: WhitelistStatus
    quarantine: Bool
    title: String
    createdUTC: Double
    subredditNamePrefixed: String
    ups: Int
    media: Maybe<Media>
    numComments: Int
    isSelf: Bool
    visited: Bool
    modNote: Null
    isVideo: Bool
    distinguished: Null
}

class Media {
    type: MediaType
    oembed: Oembed
}

class Oembed {
    providerURL: ProviderURL
    description?: String
    title: String
    thumbnailWidth: Int
    height: Int
    width: Int
    html: String
    version: Version
    providerName: ProviderName
    thumbnailURL: String
    type: OembedType
    thumbnailHeight: Int
    authorName?: String
    authorURL?: String
}

class MediaEmbed {
    content?: String
    width?: Int
    scrolling?: Bool
    height?: Int
    mediaDomainURL?: String
}

class Preview {
    images: List<Image>
    enabled: Bool
}

class Image {
    source: Resolution
    resolutions: List<Resolution>
    variants: Variants
    id: String
}

class Resolution {
    url: String
    width: Int
    height: Int
}

class Variants {
    gif?: GIF
    mp4?: GIF
}

class GIF {
    source: Resolution
    resolutions: List<Resolution>
}

enum ProviderName = Clippit | Gfycat | YouTube

enum ProviderURL = HTTPClippitTv | HTTPGfycatCOM | HTTPSWWWYoutubeCOM

enum OembedType = Video

enum Version = The10

enum MediaType = ClippituserTv | GfycatCOM | YoutubeCOM

enum WhitelistStatus = AllAds | PromoAll

enum PostHint = Image | Link | RichVideo | Self

enum SubredditType = Public

enum Kind = T3
